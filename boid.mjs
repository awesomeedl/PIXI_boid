import{Sprite as i,Texture as t,utils as o}from"pixi";import"victor";import{app as e,spatialHash as r}from"./main.mjs";export const visibleRange=100;class s{constructor(o){this.flock=new Array(o),this.sprites=new Array(o),this.specialBoid=Math.floor(Math.random()*this.flock.length);for(let r=0;r<o;r++){this.flock[r]=new n(Victor().randomize(Victor(0,0),Victor(e.renderer.width,e.renderer.height)));let o=new i(t.from("Arrow.png"));o.scale.set(.3),o.anchor.set(.5),e.stage.addChild(o),this.sprites[r]=o}}run(){for(let i=0;i<this.flock.length;i++){let t=this.flock[i],s=this.sprites[i],n=r.getNeighbors(t.spatialIndex),a=t.run(n);t.velocity.add(a).normalize().multiplyScalar(3),t.position.add(t.velocity),s.rotation=t.velocity.horizontalAngle()+.5*Math.PI,t.position.x<0&&(t.position.x=e.renderer.width),t.position.y<0&&(t.position.y=e.renderer.height),t.position.x>e.renderer.width&&(t.position.x=0),t.position.y>e.renderer.height&&(t.position.y=0),s.x=t.position.x,s.y=t.position.y;let l=t.velocity.clone().normalize();s.tint=o.rgb2hex([0,Math.cos(l.x),Math.cos(l.y)])}}}class n{constructor(i){this.position=i,this.velocity=Victor().randomize(Victor(-3,-3),Victor(3,3)),this.spatialIndex=r.getIndex(i)}run(i){let t=this.cohesion(i).multiplyScalar(1),o=this.separation(i).multiplyScalar(500),e=this.alignment(i).multiplyScalar(15);return this.acceleration=t.add(o).add(e),this.acceleration.lengthSq()>.010000000000000002&&this.acceleration.normalize().multiplyScalar(.1),this.acceleration}isNeighbor(i){return i!==this&&this.position.distanceSq(i.position)<1e4}cohesion(i){let t=Victor(),o=0;for(let e of i)this.isNeighbor(e)&&(t.add(e.position),o++);return o>0?t.divideScalar(o).subtract(this.position):t}alignment(i){let t=Victor(),o=0;for(let e of i)this.isNeighbor(e)&&(t.add(e.velocity),o++);return o>0?t.divideScalar(o).subtract(this.velocity).mix(this.velocity,.2):this.velocity}separation(i){let t=Victor();for(let o of i)o!==this&&this.position.distanceSq(o.position)<2500&&t.add(this.position.clone().subtract(o.position).divideScalar(this.position.distanceSq(o.position)));return t}}export{s as Flock,n as Boid};